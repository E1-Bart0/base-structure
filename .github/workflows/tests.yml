name: Linters, CodeFormators, Tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
   paths:
      - '**.py'
      - '.github/workflows/**'
      - '.flake8'
      - 'poetry.lock'
      - 'pyproject.toml'
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
    paths:
      - '**.py'
      - '.github/workflows/**'
      - '.flake8'
      - 'poetry.lock'
      - 'pyproject.toml'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:

  build:
    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:latest
#        env:
#          ENV: dev
#          POETRY_VERSION: 1.1.11
#          POSTGRES_DB: pg
#          POSTGRES_USER: pg
#          POSTGRES_PASSWORD: pg_pass
#        ports:
#          - 5432:5432
# Set health checks to wait until postgres has started
#        options:
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.0

    - name: Install Dependencies
      run: |
        pip install poetry==1.1.11
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi

    - name: Black check
      run: |
        poetry run black . --check

    - name: Isort check
      run: |
        poetry run isort . --check -q

    - name: Lint with flake8
      run: |
        poetry run flake8 . --format="::error file=%(path)s,line=%(row)d,col=%(col)d::%(path)s:%(row)d:%(col)d: %(code)s %(text)s"

    - name: MyPy check type hints
      run: |
        poetry run mypy .

    - name: Test with pytest
      run: |
        poetry run pytest .
